$date
	Thu Aug 05 13:35:00 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module alu_tb $end
$var wire 32 ! RESULT [31:0] $end
$var wire 1 " BRANCH $end
$var reg 1 # CLK $end
$var reg 32 $ DATA1 [31:0] $end
$var reg 32 % DATA2 [31:0] $end
$var reg 1 & RESET $end
$var reg 5 ' SELECT [4:0] $end
$scope module myalu $end
$var wire 32 ( DATA1 [31:0] $end
$var wire 32 ) DATA2 [31:0] $end
$var wire 32 * RES_AND [31:0] $end
$var wire 32 + RES_FWD [31:0] $end
$var wire 32 , RES_OR [31:0] $end
$var wire 32 - RES_XOR [31:0] $end
$var wire 5 . SELECT [4:0] $end
$var wire 32 / RES_SUB [31:0] $end
$var wire 32 0 RES_SRL [31:0] $end
$var wire 32 1 RES_SRA [31:0] $end
$var wire 32 2 RES_SLTU [31:0] $end
$var wire 32 3 RES_SLT [31:0] $end
$var wire 32 4 RES_SLL [31:0] $end
$var wire 1 5 RES_REMU $end
$var wire 32 6 RES_REM [31:0] $end
$var wire 32 7 RES_MULHU [31:0] $end
$var wire 32 8 RES_MULHSU [31:0] $end
$var wire 32 9 RES_MULH [31:0] $end
$var wire 32 : RES_MUL [31:0] $end
$var wire 32 ; RES_DIV [31:0] $end
$var wire 32 < RES_ADD [31:0] $end
$var wire 1 = BR_BNE $end
$var wire 1 > BR_BLTU $end
$var wire 1 ? BR_BLT $end
$var wire 1 @ BR_BGEU $end
$var wire 1 A BR_BGE $end
$var wire 1 B BR_BEQ $end
$var reg 1 " BRANCH $end
$var reg 32 C RESULT [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
xB
xA
x@
x?
x>
x=
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
bx $
0#
x"
bx !
$end
#10
1&
#20
b0x 3
b0x 2
#40
b1010 %
b1010 )
b101 $
b101 (
b0 '
b0 .
0&
1#
#60
0"
b1111 !
b1111 C
15
b1 3
b1 2
b0 *
b1111 ,
b1111 -
b1010 +
b1111 <
b11111111111111111111111111111011 /
b1010000000000 4
b0 0
b0 1
b110010 :
b110010 9
b110010 8
b110010 7
b0 ;
b101 6
0B
1=
1?
0A
1>
0@
#80
b10 %
b10 )
b1 '
b1 .
0#
#100
b10100 !
b10100 C
b111 ,
b111 -
b0 3
b0 2
b10 +
b111 <
b11 /
b10100 4
b1 0
b1 1
b1010 :
b1010 9
b1010 8
b1010 7
b10 ;
b1 6
0?
1A
0>
1@
#120
b11111111111111111111111111111110 %
b11111111111111111111111111111110 )
b110 $
b110 (
b10 '
b10 .
1#
#140
b0 !
b0 C
b1 2
b110 *
b11111111111111111111111111111110 ,
b11111111111111111111111111111000 -
05
b11111111111111111111111111111110 +
b0 0
b0 1
1>
0@
b100 <
b1000 /
b0 4
b11111111111111111111111111110100 :
b11111111111111111111111111110100 9
b11111111111111111111111111110100 8
b11111111111111111111111111110100 7
b0 ;
b0 6
#160
b11 '
b11 .
0#
#180
b1 !
b1 C
#200
b111000 %
b111000 )
b1101 $
b1101 (
b100 '
b100 .
1#
#220
b110101 !
b110101 C
b1 3
b1000 *
b111101 ,
b110101 -
15
b111000 +
1?
0A
b1000101 <
b11111111111111111111111111010101 /
b1011011000 :
b1011011000 9
b1011011000 8
b1011011000 7
b1101 6
#240
b110 '
b110 .
0#
#260
b111101 !
b111101 C
#280
b111 '
b111 .
1#
#300
b1000 !
b1000 C
#320
b1010 %
b1010 )
b1111 $
b1111 (
b10000 '
b10000 .
0#
#340
b101 !
b101 C
b0 3
b0 2
b1010 *
b1111 ,
b101 -
b1010 +
b11110000000000 4
b1 ;
0?
1A
0>
1@
b11001 <
b101 /
b10010110 :
b10010110 9
b10010110 8
b10010110 7
b101 6
#360
b1010 $
b1010 (
b1000 '
b1000 .
1#
#370
b0 !
b0 C
#380
1"
b1010 ,
b0 -
05
b10100 <
b0 /
b10100000000000 4
b1100100 :
b1100100 9
b1100100 8
b1100100 7
b0 6
1B
0=
#400
b1011 %
b1011 )
b1001 '
b1001 .
0#
#420
b1011 ,
b1 -
b1 3
b1 2
b1011 +
b10101 <
b11111111111111111111111111111111 /
b101000000000000 4
b1101110 :
b1101110 9
b1101110 8
b1101110 7
b0 ;
b1010 6
0B
1=
1?
0A
1>
0@
#440
b1100 '
b1100 .
1#
#480
b11001000 %
b11001000 )
b10100100001110110111010000000000 $
b10100100001110110111010000000000 (
b11000 '
b11000 .
0#
#500
0"
b1001110011100101010000000000000 !
b1001110011100101010000000000000 C
b0 *
b10100100001110110111010011001000 ,
b10100100001110110111010011001000 -
b0 2
b11001000 +
b10100100001110110111010011001000 <
b10100100001110110111001100111000 /
b0 4
b1001110011100101010000000000000 :
b1001110011100101010000000000000 9
b1001110011100101010000000000000 8
b1001110011100101010000000000000 7
b110100100011011110011110 ;
b11111111111111111111111101101000 6
0>
1@
#520
b10 %
b10 )
b1010 $
b1010 (
b11100 '
b11100 .
1#
#540
b101 !
b101 C
b0 3
b10 *
b1010 ,
b1000 -
b10 +
b101000 4
b10 0
b10 1
0?
1A
b1100 <
b1000 /
b10100 :
b10100 9
b10100 8
b10100 7
b101 ;
b0 6
#560
b101 %
b101 )
b11011 $
b11011 (
b11101 '
b11101 .
0#
#580
b10 !
b10 C
b1 *
b11111 ,
b11110 -
b101 +
b100000 <
b10110 /
b1101100000 4
b0 0
b0 1
b10000111 :
b10000111 9
b10000111 8
b10000111 7
b10 6
#600
1#
#640
0#
#680
1#
#720
0#
#760
1#
#800
0#
#840
1#
#880
0#
#920
1#
#960
0#
#1000
1#
#1040
0#
#1080
1#
#1120
0#
#1160
1#
#1200
0#
#1240
1#
#1280
0#
#1320
1#
#1360
0#
#1400
1#
#1440
0#
#1480
1#
#1520
0#
#1560
1#
#1600
0#
#1640
1#
#1680
0#
#1720
1#
#1760
0#
#1800
1#
#1840
0#
#1880
1#
#1920
0#
#1960
1#
#2000
0#
#2040
1#
#2080
0#
#2120
1#
#2160
0#
#2200
1#
#2240
0#
#2280
1#
#2320
0#
#2360
1#
#2400
0#
#2440
1#
#2480
0#
#2520
1#
#2560
0#
#2600
1#
#2640
0#
#2680
1#
#2720
0#
#2760
1#
#2800
0#
#2840
1#
#2880
0#
#2920
1#
#2960
0#
#3000
1#
#3040
0#
#3080
1#
#3120
0#
#3160
1#
#3200
0#
#3240
1#
#3280
0#
#3320
1#
#3360
0#
#3400
1#
#3440
0#
#3480
1#
#3520
0#
#3560
1#
#3600
0#
#3640
1#
#3680
0#
#3720
1#
#3760
0#
#3800
1#
#3840
0#
#3880
1#
#3920
0#
#3960
1#
#4000
0#
#4040
1#
#4080
0#
#4120
1#
#4160
0#
#4200
1#
#4240
0#
#4280
1#
#4320
0#
#4360
1#
#4400
0#
#4440
1#
#4480
0#
#4520
1#
#4560
0#
#4600
1#
#4640
0#
#4680
1#
#4720
0#
#4760
1#
#4800
0#
#4840
1#
#4880
0#
#4920
1#
#4960
0#
#5000
1#
#5040
0#
#5080
1#
#5120
0#
#5160
1#
#5200
0#
#5240
1#
#5280
0#
#5320
1#
#5360
0#
#5400
1#
#5440
0#
#5480
1#
#5520
0#
#5560
1#
#5590
