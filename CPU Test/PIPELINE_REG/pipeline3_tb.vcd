$date
	Thu Aug 05 23:40:15 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module pipeline3_tb $end
$var wire 1 ! REG_WRITE_OUT $end
$var wire 1 " REG_DEST_OUT $end
$var wire 32 # PC_NEXT_OUT [31:0] $end
$var wire 32 $ OUT2_OUT [31:0] $end
$var wire 3 % MEM_WRITE_OUT [2:0] $end
$var wire 2 & MEM_TO_REG_OUT [1:0] $end
$var wire 3 ' MEM_READ_OUT [2:0] $end
$var wire 5 ( IN_ADDRESS_OUT [4:0] $end
$var wire 1 ) BRANCH_RES_OUT $end
$var wire 32 * ALU_RESULT_OUT [31:0] $end
$var reg 32 + ALU_RESULT [31:0] $end
$var reg 1 , BRANCH_RES $end
$var reg 1 - BUSY_WAIT $end
$var reg 1 . CLK $end
$var reg 5 / IN_ADDRESS [4:0] $end
$var reg 3 0 MEM_READ [2:0] $end
$var reg 2 1 MEM_TO_REG [1:0] $end
$var reg 3 2 MEM_WRITE [2:0] $end
$var reg 32 3 OUT2 [31:0] $end
$var reg 32 4 PC_NEXT [31:0] $end
$var reg 1 5 REG_DEST $end
$var reg 1 6 REG_WRITE $end
$var reg 1 7 RESET $end
$scope module my_pipeline3 $end
$var wire 32 8 ALU_RESULT [31:0] $end
$var wire 1 , BRANCH_RES $end
$var wire 1 - BUSY_WAIT $end
$var wire 1 . CLK $end
$var wire 5 9 IN_ADDRESS [4:0] $end
$var wire 3 : MEM_READ [2:0] $end
$var wire 2 ; MEM_TO_REG [1:0] $end
$var wire 3 < MEM_WRITE [2:0] $end
$var wire 32 = OUT2 [31:0] $end
$var wire 32 > PC_NEXT [31:0] $end
$var wire 1 5 REG_DEST $end
$var wire 1 6 REG_WRITE $end
$var wire 1 7 RESET $end
$var reg 32 ? ALU_RESULT_OUT [31:0] $end
$var reg 1 ) BRANCH_RES_OUT $end
$var reg 5 @ IN_ADDRESS_OUT [4:0] $end
$var reg 3 A MEM_READ_OUT [2:0] $end
$var reg 2 B MEM_TO_REG_OUT [1:0] $end
$var reg 3 C MEM_WRITE_OUT [2:0] $end
$var reg 32 D OUT2_OUT [31:0] $end
$var reg 32 E PC_NEXT_OUT [31:0] $end
$var reg 1 " REG_DEST_OUT $end
$var reg 1 ! REG_WRITE_OUT $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
b1010 >
b1100 =
b100 <
b1 ;
b11 :
b100 9
b1010 8
07
16
15
b1010 4
b1100 3
b100 2
b1 1
b11 0
b100 /
0.
0-
1,
b1010 +
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
x"
x!
$end
#10
b11111111111111111111111111111100 #
b11111111111111111111111111111100 E
b0 $
b0 D
b0 *
b0 ?
b0 (
b0 @
b0 &
b0 B
b0 %
b0 C
b0 '
b0 A
0!
0"
0)
17
#40
1.
#60
07
#70
b101010 3
b101010 =
b111000 +
b111000 8
#80
0.
#120
1.
#130
b1010 #
b1010 E
b101010 $
b101010 D
b111000 *
b111000 ?
b100 (
b100 @
b1 &
b1 B
b100 %
b100 C
b11 '
b11 A
1!
1"
1)
#150
b1000 4
b1000 >
b110 +
b110 8
b10 0
b10 :
1-
#160
0.
#200
1.
#240
0.
#280
1.
#320
0.
#360
1.
#400
0.
#440
1.
#480
0.
#520
1.
#560
0.
#600
1.
#640
0.
#680
1.
#720
0.
#760
1.
#800
0.
#840
1.
#880
0.
#920
1.
#960
0.
#1000
1.
#1040
0.
#1080
1.
#1120
0.
#1160
1.
#1200
0.
#1220
